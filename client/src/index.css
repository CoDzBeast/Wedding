@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 40 10% 97%;

  --foreground: 0 0% 0%; /* Black */

  --border: 40 8% 88%;

  --card: 38 8% 96%;

  --card-foreground: 0 0% 0%; /* Black */

  --card-border: 38 8% 91%;

  --sidebar: 42 9% 93%;

  --sidebar-foreground: 32 8% 22%;

  --sidebar-border: 42 8% 86%;

  --sidebar-primary: 145 18% 42%;

  --sidebar-primary-foreground: 145 12% 98%;

  --sidebar-accent: 42 12% 88%;

  --sidebar-accent-foreground: 32 10% 28%;

  --sidebar-ring: 145 18% 42%;

  --popover: 40 10% 91%;

  --popover-foreground: 0 0% 0%; /* Black */

  --popover-border: 40 8% 84%;

  --primary: 75 13% 41%; /* Primary accent color (HSLA: 75 13% 41% 0.9) */

  --primary-foreground: 0 0% 100%; /* White for contrast */

  --secondary: 32 8% 50%; /* Secondary accent color (HSLA: 32 8% 50% 1) */

  --secondary-foreground: 0 0% 100%; /* White for contrast */

  --muted: 75 13% 85%; /* Muted version of primary */

  --muted-foreground: 0 0% 0%; /* Black */

  --accent: 75 13% 41%; /* Primary accent color */

  --accent-foreground: 0 0% 100%; /* White for contrast */

  --destructive: 0 65% 48%;

  --destructive-foreground: 0 20% 98%;

  --input: 75 13% 75%; /* Adjusted for new color scheme */
  --ring: 75 13% 41%; /* Primary accent color */
  --chart-1: 145 25% 38%;
  --chart-2: 35 40% 55%;
  --chart-3: 28 35% 48%;
  --chart-4: 150 22% 45%;
  --chart-5: 42 45% 52%;

  --font-sans: "Lora", Georgia, serif;
  --font-serif: "Playfair Display", Georgia, serif;
  --font-mono: Menlo, monospace;
  --font-script: "Great Vibes", cursive;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 2px 0px 0px hsl(40 8% 88% / 0.00);
  --shadow-xs: 0px 2px 0px 0px hsl(40 8% 88% / 0.00);
  --shadow-sm: 0px 2px 0px 0px hsl(40 8% 88% / 0.00), 0px 1px 2px -1px hsl(40 8% 88% / 0.00);
  --shadow: 0px 2px 0px 0px hsl(40 8% 88% / 0.00), 0px 1px 2px -1px hsl(40 8% 88% / 0.00);
  --shadow-md: 0px 2px 0px 0px hsl(40 8% 88% / 0.00), 0px 2px 4px -1px hsl(40 8% 88% / 0.00);
  --shadow-lg: 0px 2px 0px 0px hsl(40 8% 88% / 0.00), 0px 4px 6px -1px hsl(40 8% 88% / 0.00);
  --shadow-xl: 0px 2px 0px 0px hsl(40 8% 88% / 0.00), 0px 8px 10px -1px hsl(40 8% 88% / 0.00);
  --shadow-2xl: 0px 2px 0px 0px hsl(40 8% 88% / 0.00);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 32 5% 12%;

  --foreground: 0 0% 100%; /* White */

  --border: 32 5% 22%;

  --card: 34 5% 14%;

  --card-foreground: 0 0% 100%; /* White */

  --card-border: 34 5% 20%;

  --sidebar: 36 5% 16%;

  --sidebar-foreground: 40 5% 88%;

  --sidebar-border: 36 5% 24%;

  --sidebar-primary: 145 18% 42%;

  --sidebar-primary-foreground: 145 12% 98%;

  --sidebar-accent: 38 8% 20%;

  --sidebar-accent-foreground: 40 6% 85%;

  --sidebar-ring: 145 18% 42%;

  --popover: 38 5% 18%;

  --popover-foreground: 0 0% 100%; /* White */

  --popover-border: 38 5% 26%;

  --primary: 75 13% 41%; /* Primary accent color (HSLA: 75 13% 41% 0.9) */

  --primary-foreground: 0 0% 100%; /* White for contrast */

  --secondary: 32 8% 50%; /* Secondary accent color (HSLA: 32 8% 50% 1) */

  --secondary-foreground: 0 0% 100%; /* White for contrast */

  --muted: 75 13% 25%; /* Muted version of primary */

  --muted-foreground: 0 0% 100%; /* White */

  --accent: 75 13% 41%; /* Primary accent color */

  --accent-foreground: 0 0% 100%; /* White for contrast */

  --destructive: 0 65% 48%;

  --destructive-foreground: 0 20% 98%;

  --input: 75 13% 30%; /* Darker input fields */
  --ring: 75 13% 41%; /* Primary accent color */
  --chart-1: 145 28% 75%;
  --chart-2: 35 45% 72%;
  --chart-3: 28 40% 68%;
  --chart-4: 150 25% 70%;
  --chart-5: 42 48% 70%;

  --shadow-2xs: 0px 2px 0px 0px hsl(32 5% 8% / 0.00);
  --shadow-xs: 0px 2px 0px 0px hsl(32 5% 8% / 0.00);
  --shadow-sm: 0px 2px 0px 0px hsl(32 5% 8% / 0.00), 0px 1px 2px -1px hsl(32 5% 8% / 0.00);
  --shadow: 0px 2px 0px 0px hsl(32 5% 8% / 0.00), 0px 1px 2px -1px hsl(32 5% 8% / 0.00);
  --shadow-md: 0px 2px 0px 0px hsl(32 5% 8% / 0.00), 0px 2px 4px -1px hsl(32 5% 8% / 0.00);
  --shadow-lg: 0px 2px 0px 0px hsl(32 5% 8% / 0.00), 0px 4px 6px -1px hsl(32 5% 8% / 0.00);
  --shadow-xl: 0px 2px 0px 0px hsl(32 5% 8% / 0.00), 0px 8px 10px -1px hsl(32 5% 8% / 0.00);
  --shadow-2xl: 0px 2px 0px 0px hsl(32 5% 8% / 0.00);

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

@layer base {
  * {
    @apply border-border;
  }

  html {
    scroll-behavior: smooth;
    /* Prevent horizontal scrolling while allowing decorative elements to display */
    overflow-x: hidden;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
    /* Prevent horizontal scrolling while allowing decorative elements */
    overflow-x: hidden;
    /* Ensure body takes full width */
    width: 100%;
    max-width: 100vw;
    /* Add relative positioning to contain absolutely positioned decorative elements */
    position: relative;
  }
  
  /* Ensure all elements respect the viewport width */
  * {
    box-sizing: border-box;
  }
  
  /* Adjust section divider to allow decorative elements to display properly */
  .section-divider {
    width: 100%;
    max-width: 100vw;
    /* Remove overflow: hidden to allow decorative elements to display */
    position: relative;
    height: 0;
    margin: 0;
  }
  
  /* Contain decorative elements within the viewport */
  .section-divider > div {
    position: absolute;
    max-width: 200px; /* Limit decorative element size on mobile */
    max-height: 200px;
  }
  
  /* Prevent images from causing overflow while allowing decorative elements */
  img {
    max-width: 100%;
    height: auto;
  }
  
  /* Special handling for decorative border images */
  .section-divider img {
    max-width: 200px; /* Limit size on mobile */
    max-height: 200px;
    width: auto;
    height: auto;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
}